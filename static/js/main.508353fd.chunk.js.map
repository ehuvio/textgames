{"version":3,"sources":["app.statusstore.jsx","app.statusservice.jsx","app.datadogstatus.jsx","app.azurestatus.jsx","app.main.jsx","serviceWorker.js","index.js"],"names":["initial","azureStatuses","datadogStatuses","statusStore","createStore","prevState","action","type","Object","assign","data","StatusActions","doAjax","url","method","headers","Promise","resolve","reject","xr","XMLHttpRequest","onreadystatechange","readyState","status","obj","JSON","parse","responseText","e","open","k","setRequestHeader","send","stringify","StatusServiceHttp","azureLocs","azureLocRegex","interval","initDatadog","cb","this","dataDogStatuses","getDatadogStatus","setInterval","bind","initAzure","getAzureStatus","_this","accept","content-type","then","i","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","components","Symbol","iterator","next","done","c","value","name","push","id","err","return","dispatch","_this2","items","DOMParser","parseFromString","response","querySelectorAll","j","length","virtualStatus","cloudStatus","functionStatus","myLocation","myRegex","RegExp","itemTitle","getElementsByTagName","childNodes","nodeValue","itemDescription","isFoundInTitle","test","isFoundInDesc","myStatusRegex","location","DatadogRow","_ref","react_default","a","createElement","style","color","statusStyle","DatadogStatus","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","unsubscibe","subscribe","console","log","getState","rows","props","statuses","map","s","app_datadogstatus_DatadogRow","React","Component","ActualDatadog","connect","state","AzureRow","AzureStatus","app_azurestatus_AzureRow","ActualAzure","ServerMain","es","store","BrowserRouter","Link","to","Switch","Route","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","app_main_ServerMain","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.508353fd.chunk.js","sourcesContent":["import {createStore} from 'redux';\n\nvar initial={\n    azureStatuses:[],\n    datadogStatuses:[]\n}\n\nfunction statusReducer(prevState,action){\n    if (!prevState) return initial;\n\n    if (action.type===\"GOT_NEW_DATADOG_STATUS\")\n        return Object.assign({},prevState,{datadogStatuses:action.data});\n\n    if (action.type===\"GOT_NEW_AZURE_STATUS\")\n        return Object.assign({},prevState,{azureStatuses:action.data});\n\n    return prevState;\n}\n\nexport var statusStore=createStore(statusReducer);\n\nexport var StatusActions={\n    gotNewDatadogStatus(datadogStatuses){return {type:'GOT_NEW_DATADOG_STATUS',data:datadogStatuses}},\n    gotNewAzureStatus(azureStatuses){return {type:'GOT_NEW_AZURE_STATUS',data:azureStatuses}}\n}\n","import {statusStore,StatusActions} from './app.statusstore';\n\nfunction doAjax(url,method,data, headers) {\n\treturn new Promise(function(resolve,reject){\n\t\tvar xr=new XMLHttpRequest();\n\t\txr.onreadystatechange=function(){\n\t\t\tif(xr.readyState===4){\n\t\t\t\tif((xr.status>=200)&&(xr.status<300)){\n\t\t\t\t\ttry{\n\t\t\t\t\t\tvar obj=JSON.parse(xr.responseText);\n\t\t\t\t\t\tresolve(obj,xr);\n\t\t\t\t\t}\n\t\t\t\t\tcatch(e){\n\t\t\t\t\t\tresolve(xr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse reject(xr);\n\t\t\t}\n\t\t}\n\t\txr.open(method,url,true);\n\t\tif (headers) {\n\t\t\tfor(var k in headers){\n\t\t\t\txr.setRequestHeader(k,headers[k]);\n\t\t\t}\n\t\t}\n\t\txr.send(data ? JSON.stringify(data) : null);\n\t});\n}\n\nexport var StatusServiceHttp={\n\tazureLocs:[\"East US\", \"East US 2\", \"North Europe\"],\n\tazureLocRegex:['(?!.*(East US 2)).*East US*', 'East US 2', 'North Europe'],\n\tinterval: 600000,\n\n\tinitDatadog(cb){\n\t\tif (!this.dataDogStatuses) {\n\t\t\tthis.getDatadogStatus(cb);\n\t\t\tsetInterval(this.getDatadogStatus.bind(this), this.interval);\n\t\t}\n\t},\n\n\tinitAzure(cb){\n\t\tif (!this.azureStatuses) {\n\t\t\tthis.getAzureStatus(cb);\n\t\t\tsetInterval(this.getAzureStatus.bind(this), this.interval);\n\t\t}\n\t},\n\n    getDatadogStatus(cb){\n\t\tvar datadogHeaders={\n\t\t\taccept:'application/json',\n\t\t\t\"content-type\":'application/json'\n\t\t}\n\n        doAjax(\"https://status.datadoghq.com/index.json\", \"get\",null,datadogHeaders).then(data => {\n            this.dataDogStatuses = [];\n            var i = 0;\n\n            for (let c of data.components) {\n                if (c.name === \"Alerting Engine\"|| \n                    c.name === \"Event Pipeline\") {\n                        this.dataDogStatuses.push({\"name\": c.name, \"status\": c.status, id:i});\n                        i++;\n                  }\n            }\n            statusStore.dispatch(StatusActions.gotNewDatadogStatus(this.dataDogStatuses));\n        })\n    },\n\n    getAzureStatus(cb){\n        doAjax(\"https://azurecomcdn.azureedge.net/en-us/status/feed/\", \"get\",null,null).then(data => {\n            this.azureStatuses = [];\n\t\t\t\n\t\t\t//var tempFeed = '<rss xmlns:a10=\"http://www.w3.org/2005/Atom\" version=\"2.0\"><channel xmlns:slash=\"http://purl.org/rss/1.0/modules/slash/\" xmlns:content=\"http://purl.org/rss/1.0/modules/content/\" xmlns:wfw=\"http://wellformedweb.org/CommentAPI/\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\"><title>Azure Status</title><link>https://azure.microsoft.com/en-us/status/</link><description>Azure Status</description><language>en-US</language><lastBuildDate>Mon, 12 Nov 2018 16:25:40 Z</lastBuildDate></channel><item><title>Virtual Machines/VM Scale Sets - East US 2</title><description>Summary of impact: Between 02:50 and 10:37 UTC on 27 Oct 2018, a subset of customers using Virtual Machines and/or Virtual Machine Scale Sets in East US 2 may have received failure notifications when performing service management operations - such as create, update, delete - for resources hosted in this region.Preliminary root cause: Engineers determined that some instances of a backend service responsible for interservice communication became unhealthy which in turn, caused requests between Storage and dependent resources to fail.Mitigation: Engineers performed a change to the backend service to achieve mitigation. Platform telemetry was then observed and service team engineers from affected services confirmed all requests completed successfully.Next steps: Engineers will continue to investigate to establish the full root cause to prevent future occurrences.</description>';\n\n\t\t\tconst parser = new DOMParser();\n\t\t\tconst rssFeed = parser.parseFromString(data.response, 'text/xml');\n\t\t\t//const rssFeed = parser.parseFromString(tempFeed, 'text/xml');\n\t\t\tconst items = rssFeed.querySelectorAll(\"item\");\n\n\t\t\t\n\t\t\tfor (let j = 0; j < this.azureLocs.length; j++) {\n\t\t\t\tvar virtualStatus = \"OK\";\n\t\t\t\tvar cloudStatus = \"OK\";\n\t\t\t\tvar functionStatus = \"OK\";\n\t\t\t\tvar myLocation = this.azureLocs[j];\n\t\t\t\tvar myRegex = new RegExp(this.azureLocRegex[j]);\n\n\t\t\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\t\t\tvar itemTitle = items[i].getElementsByTagName(\"title\")[0].childNodes[0].nodeValue;\n\t\t\t\t\tvar itemDescription = items[i].getElementsByTagName(\"description\")[0].childNodes[0].nodeValue;\n\n\t\t\t\t\tvar isFoundInTitle = myRegex.test(itemDescription);\n\t\t\t\t\tvar isFoundInDesc = myRegex.test(itemDescription);\n\n\t\t\t\t\tif (isFoundInTitle || isFoundInDesc) {\n\t\t\t\t\t\tvar myStatusRegex = new RegExp(\"Virtual Machines\");\n\t\t\t\t\t\tvirtualStatus = (myStatusRegex.test(itemTitle) || myStatusRegex.test(itemDescription)) ? \"NOK\" : \"OK\";\n\t\t\t\t\t\tmyStatusRegex = new RegExp(\"Cloud Cervices\");\n\t\t\t\t\t\tcloudStatus = (myStatusRegex.test(itemTitle) || myStatusRegex.test(itemDescription)) ? \"NOK\" : \"OK\";\n\t\t\t\t\t\tmyStatusRegex = new RegExp(\"Functions\");\n\t\t\t\t\t\tfunctionStatus = (myStatusRegex.test(itemTitle) || myStatusRegex.test(itemDescription)) ? \"NOK\" : \"OK\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.azureStatuses.push({\"location\": myLocation, \"virtualStatus\": virtualStatus,\n\t\t\t\t\"cloudStatus\": cloudStatus, \"functionStatus\": functionStatus, id:j});\n\t\t\t}\n\n            statusStore.dispatch(StatusActions.gotNewAzureStatus(this.azureStatuses));\n        })\n    }\n}\n","import React from 'react';\n\nimport {connect} from 'react-redux';\nimport {statusStore} from './app.statusstore';\nimport {StatusServiceHttp} from './app.statusservice';\n\nfunction statusStyle(status){\n    var color=status === 'operational' ? 'green' : 'red';\n    return  {color};\n}\n\nconst DatadogRow=({name, status}) => <tr>\n    <td>{name}</td>\n    <td style={ statusStyle(status) }>{status}</td>\n</tr>\n\nexport class DatadogStatus extends React.Component{\n\n    componentDidMount(){\n      this.unsubscibe=statusStore.subscribe(() => console.log(statusStore.getState()));\n      StatusServiceHttp.initDatadog();\n    }\n\n    componentWillUnmount(){\n      this.unsubscibe();\n    }\n\n    render() {\n        var {statuses} = this.props;\n        var rows = statuses.map((s, i) => <DatadogRow key={s.id} name={s.name} status={s.status} /> )\n        return <div><table>\n            <tbody>{rows}</tbody>\n            </table></div>;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        statuses:state.datadogStatuses\n    }\n}\n\nexport const ActualDatadog=connect(mapStateToProps)(DatadogStatus);","import React from 'react';\n\nimport {connect} from 'react-redux';\nimport {statusStore} from './app.statusstore';\nimport {StatusServiceHttp} from './app.statusservice';\n\nconst AzureRow=({location, virtualStatus, cloudStatus, functionStatus}) => <tr>\n    <td>{location}</td>\n    <td>Virtual Machines : <div style={ statusStyle(virtualStatus) }>OK</div></td>\n    <td>Cloud Cervices : <div style={ statusStyle(cloudStatus) }>OK</div></td>\n    <td>Functions : <div style={ statusStyle(functionStatus) }>OK</div></td>\n</tr>\n\nfunction statusStyle(status){\n    var color=status === 'OK' ? 'green' : 'red';\n    return  {color};\n}\n\nexport class AzureStatus extends React.Component{\n\n    componentDidMount(){\n        this.unsubscibe=statusStore.subscribe(() => console.log(statusStore.getState()));\n        StatusServiceHttp.initAzure();\n      }\n  \n      componentWillUnmount(){\n        this.unsubscibe();\n      }\n\n      render() {\n        var {statuses} = this.props;\n        var rows = statuses.map((s) => <AzureRow key={s.id} location={s.location} virtualStatus={s.virtualStatus} \n        cloudStatus={s.cloudStatus} functionStatus={s.functionStatus}  /> );\n      return <div><table>\n          <tbody>{rows}</tbody>\n          </table></div>;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        statuses:state.azureStatuses\n    }\n}\n\nexport const ActualAzure=connect(mapStateToProps)(AzureStatus);","import React from 'react';\nimport {Provider} from 'react-redux';\n\nimport {statusStore} from './app.statusstore'\n\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Route,Link,Switch} from 'react-router-dom';\n\nimport {ActualDatadog} from './app.datadogstatus';\nimport {ActualAzure} from './app.azurestatus';\n\nexport default class ServerMain extends React.Component{\n\n    componentDidMount(){\n    }\n\n    render(){\n        return <Provider store={statusStore} ><Router><div>\n            <header>\n                <h1>Service Status Check</h1>\n            </header>\n            <nav>\n                <Link to=\"/datadog\">DataDog</Link>\n                <Link to=\"/azure\">Azure</Link>\n            </nav>\n            <main>\n                <Switch>\n                    <Route exact path='/' component={ActualDatadog} />\n                    <Route path='/datadog' component={ActualDatadog} />\n                    <Route path='/azure' component={ActualAzure} />\n                </Switch>\n            </main>\n            <footer>\n                <br/>\n                Copyright (c) Eetu Solutions Ltd\n            </footer>\n        </div></Router></Provider>\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ServerMain from './app.main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<ServerMain />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}